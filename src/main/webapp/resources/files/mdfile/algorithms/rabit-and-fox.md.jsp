<%@ page contentType="text/html; charset=UTF-8" %><p>围绕着山顶有10个山洞，狐狸要吃兔，兔子说：“可以，但必须找到我，我就藏身于这是个洞中，你从第10号洞出发，先到1号洞找，第二次隔着1个洞找，第三次隔2个洞找，以后如此类推，次数不限。”但狐狸从早到晚进进出出了1000次，都没找到兔子。**问：**兔子藏在哪个洞里？</p>
<!--more-->
<h1>蛮力法查找</h1>
<p>使用1000次循环找出所有的洞，模拟狐狸的动作不断做兜圈动作：计算每次狐狸到访的洞$\lbrace 0, 1 \ldots 9\rbrace$（10号洞用0号表示），并去除重复的元素做取集。</p>
<p>python算法实现如下：</p>
<pre><code class="language-python">p = set([(x*(x+1)//2-1)%10 for x in range(1, 1000)])
q = set(range(10)) - p
print('狐狸一直兜圈的洞为：', p)
print('兔子可能藏身的地方：',q)
</code></pre>
<p>结果输出为：</p>
<pre><code class="language-bash">狐狸一直兜圈的洞为： {0, 2, 4, 5, 7, 9}
兔子可能藏身的地方： {8, 1, 3, 6}
</code></pre>
<p>观察如下，狐狸所到访的洞的标号，易知，其不断重复前面1~20次到访的次序（加黑表示）。
<strong>0, 2, 5, 9, 4, 0, 7, 5, 4, 4, 5, 7, 0, 4, 9, 5, 2, 0, 9, 9</strong>, 0, 2, 5, 9, 4, 0, 7, 5, 4, 4, 5, 7, 0, 4, 9, 5, 2, 0, 9 ...</p>
<p>设第1至20次访问序列为：$S[20]=[0, 2, 5, 9, 4, 0, 7, 5, 4, 4, 5, 7, 0, 4, 9, 5, 2, 0, 9, 9]$</p>
<p>狐狸在找洞的过程中不断兜圈的原因是第21次访问时回到了最开始的洞（0号），而21次到访的增量(20)被10整除（$S[x]=S[x+20]$），导致第21次与第1次的洞号相同，到访次序不断重复。</p>
<p>故不在序列S内的洞$\lbrace 8, 1, 3, 6 \rbrace $狐狸将没有机会访问到。</p>
