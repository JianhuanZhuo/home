/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/7.0.37
 * Generated at: 2018-02-16 11:14:55 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.resources.files.mdfile.NLP;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class cut_002doff_002ded_md_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public void _jspInit() {
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("<p>参考：</p>\n");
      out.write("<ul>\n");
      out.write("<li><a href=\"https://www.cs.helsinki.fi/u/tpkarkka/opetus/11s/spa/lecture06.pdf\">https://www.cs.helsinki.fi/u/tpkarkka/opetus/11s/spa/lecture06.pdf</a></li>\n");
      out.write("<li>Oflazer K. Error-tolerant finite-state recognition with applications to morphological analysis and spelling correction[J]. Computational Linguistics, 1996, 22(1): 73-89.</li>\n");
      out.write("</ul>\n");
      out.write("<h2>编辑距离 Edit Distance</h2>\n");
      out.write("<p>编辑距离（Edit Distance），又称 Levenshtein 距离，是指两个字串之间，由一个转成另一个所需的最少编辑操作次数。许可的编辑操作包括将一个字符替换成另一个字符，插入一个字符，删除一个字符。一般来说，编辑距离越小，两个串的相似度越大。</p>\n");
      out.write("<p><img src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
      out.write("/resources\\files\\mdfile\\NLP\\img\\2018-02-16-14-36-06.png\" alt=\"编辑距离示例\" /></p>\n");
      out.write("<p>给定两个字符串 $A[1..m]$ 和 $B[1..n]$，$d_{ij}$ 定义如下：</p>\n");
      out.write("<div>\n");
      out.write("$$\r\n");
      out.write("\\begin{aligned}\r\n");
      out.write("d_{00} &= 0, \\\\\r\n");
      out.write("d_{i0} &= i, 1 \\le i \\le m,\\\\\r\n");
      out.write("d_{0j} &= j, 1 \\le j \\le n,\\\\\r\n");
      out.write("d_{ij} &= min\r\n");
      out.write("\\left\\{\r\n");
      out.write("\\begin{aligned}\r\n");
      out.write("&d_{i-1,j-1} + \\delta(A[i],B[j])\r\n");
      out.write("\\\\\r\n");
      out.write("&d_{i-1,j} + 1\r\n");
      out.write("\\\\\r\n");
      out.write("&d_{i,j-1} + 1\r\n");
      out.write("\\end{aligned}\r\n");
      out.write("\\right.\r\n");
      out.write("1 \\le i \\le m, 1 \\le j \\le n\r\n");
      out.write("\\end{aligned}\r\n");
      out.write("$$\r\n");
      out.write("</div>\n");
      out.write("<p>其中：</p>\n");
      out.write("<div>\n");
      out.write("$$\r\n");
      out.write("\\delta(A[i],B[j])=\\left\\{\r\n");
      out.write("\\begin{array}{cc}\r\n");
      out.write("1 & if A[i] \\not= B[j]\\\\ \r\n");
      out.write("0 & if A[i] = B[j]\r\n");
      out.write("\\end{array}\r\n");
      out.write("\\right.\r\n");
      out.write("$$\r\n");
      out.write("</div>\n");
      out.write("<h2>cut off 编辑距离</h2>\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try { out.clearBuffer(); } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
